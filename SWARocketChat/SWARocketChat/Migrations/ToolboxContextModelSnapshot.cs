// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using SWARocketChat.Models;

namespace SWARocketChat.Migrations
{
    [DbContext(typeof(ToolboxContext))]
    partial class ToolboxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("SWARocketChat.Models.App", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("SWARocketChat.Models.AppLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<string>("Description");

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<Guid>("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Thumbnail");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.HasIndex("LanguageId");

                    b.ToTable("AppLanguages");
                });

            modelBuilder.Entity("SWARocketChat.Models.AppLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppId");

                    b.Property<Guid>("LocationId");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.HasIndex("LocationId");

                    b.ToTable("AppLocations");
                });

            modelBuilder.Entity("SWARocketChat.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Image");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("LanguageName");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("SWARocketChat.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GeoCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<Guid>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("SWARocketChat.Models.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Manager");

                    b.Property<string>("RegionName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("SWARocketChat.Models.AppLanguage", b =>
                {
                    b.HasOne("SWARocketChat.Models.App", "App")
                        .WithMany("AppLanguages")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SWARocketChat.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SWARocketChat.Models.AppLocation", b =>
                {
                    b.HasOne("SWARocketChat.Models.App", "App")
                        .WithMany("AppLocations")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SWARocketChat.Models.Location", "Location")
                        .WithMany("AppLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SWARocketChat.Models.Location", b =>
                {
                    b.HasOne("SWARocketChat.Models.Region", "Regions")
                        .WithMany("Locations")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
